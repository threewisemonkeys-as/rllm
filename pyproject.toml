[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rllm"
version = "0.1.0"
description = "Reinforcement Learning for Language Agents"
authors = [
    {name = "rLLM Team"}
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
license = {file = "LICENSE"}
dependencies = [
    # Core ML/AI packages
#    "torch>=2.7",
    "transformers",
    "accelerate",
#   "flash-attn>=2.8.0.post2",
    "sentence-transformers",
    "torchmetrics",

    # Training and inference
    "deepspeed",
#   "vllm>=0.8.3",
#   "sgl-kernel>=0.2.0",
#   "sglang>=0.4.8.post1",
#   "sglang-router",
    "peft",
    "torchao",

    # Data processing
    "datasets",
    "polars",
    "dm-tree",

    # Cloud and infrastructure
    "google-cloud-aiplatform",
    "vertexai",
    "kubernetes",
    "ray",

    # Web and automation
    "gradio",
    "selenium",
    "browsergym",
    "firecrawl",

    # Math and science
    "latex2sympy2",
    "pylatexenc",
    "nltk",
    "scipy",
    "scikit-learn",

    # Code evaluation
    "swebench",
    "e2b_code_interpreter",

    # Utilities
    "fire",
    "gdown",
    "tabulate",
    "sortedcontainers",
    "PyMuPDF",
    "together",
    "wandb",
    "pybind11",
    "gym",

    # Development and testing
    "pytest",
    "pre-commit",
    "ruff",
    "mypy",

    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-autorefs>=0.5.0",
    "pymdown-extensions>=10.0.0",
]

[tool.ruff]
line-length = 5000 # TODO: Reduce this to a more reasonable value

[tool.ruff.lint]
isort = {known-first-party = ["rllm"]}
# c.f. https://github.com/vllm-project/vllm/blob/ce8d6b75fc0586045df75ee1568a5b5f9957251b/pyproject.toml
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # isort
    "I",
    "G",
]
ignore = [
    # star imports
    "F405", "F403",
    # lambda expression assignment
    "E731",
    # Loop control variable not used within loop body
    "B007",
    # f-string format
    "UP032",
    # `.log()` statement uses f-string
    "G004",
    # equality check using x == True
    "E712", 
]

[tool.ruff.lint.per-file-ignores]
"rllm/rewards/code_utils/**" = ["ALL"]

[tool.setuptools.packages.find]
where   = ["."]
include = ["rllm", "rllm.*"]

[tool.mypy]
plugins = ["pydantic.mypy"]
ignore_missing_imports = true
check_untyped_defs = true
follow_imports = "silent"

exclude = [
    "verl/.*",
    "rllm/rewards/code_utils/.*",
    "rllm/rewards/math_utils/.*",
    "examples/.*",
    "scripts/.*",
    "tests/.*",
    "docs/.*",
]
